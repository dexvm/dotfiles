require "core.options"
require "core.plugins"
require "core.autocmds"
require "core.mappings"

--Add leader shortcuts
--vim.keymap.set('n', '<leader><space>', require('telescope.builtin').buffers)
--vim.keymap.set('n', '<leader>sf', function()
--  require('telescope.builtin').find_files { previewer = false }
--end)
--vim.keymap.set('n', '<leader>sb', require('telescope.builtin').current_buffer_fuzzy_find)
--vim.keymap.set('n', '<leader>sh', require('telescope.builtin').help_tags)
--vim.keymap.set('n', '<leader>st', require('telescope.builtin').tags)
--vim.keymap.set('n', '<leader>sd', require('telescope.builtin').grep_string)
--vim.keymap.set('n', '<leader>sp', require('telescope.builtin').live_grep)
--vim.keymap.set('n', '<leader>so', function()
--  require('telescope.builtin').tags { only_current_buffer = true }
--end)
--vim.keymap.set('n', '<leader>?', require('telescope.builtin').oldfiles)

-- Treesitter configuration
-- Parsers must be installed manually via :TSInstall
--require('nvim-treesitter.configs').setup {
--  highlight = {
--    enable = true, -- false will disable the whole extension
--  },
--  incremental_selection = {
--    enable = true,
--    keymaps = {
--      init_selection = 'gnn',
--      node_incremental = 'grn',
--      scope_incremental = 'grc',
--      node_decremental = 'grm',
--    },
--  },
--  indent = {
--    enable = true,
--  },
--  textobjects = {
--    select = {
--      enable = true,
--      lookahead = true, -- Automatically jump forward to textobj, similar to targets.vim
--      keymaps = {
--        -- You can use the capture groups defined in textobjects.scm
--        ['af'] = '@function.outer',
--        ['if'] = '@function.inner',
--        ['ac'] = '@class.outer',
--        ['ic'] = '@class.inner',
--      },
--    },
--    move = {
--      enable = true,
--      set_jumps = true, -- whether to set jumps in the jumplist
--      goto_next_start = {
--        [']m'] = '@function.outer',
--        [']]'] = '@class.outer',
--      },
--      goto_next_end = {
--        [']M'] = '@function.outer',
--        [']['] = '@class.outer',
--      },
--      goto_previous_start = {
--        ['[m'] = '@function.outer',
--        ['[['] = '@class.outer',
--      },
--      goto_previous_end = {
--        ['[M'] = '@function.outer',
--        ['[]'] = '@class.outer',
--      },
--    },
--  },
--}

-- vim: ts=2 sts=2 sw=2 et
